package rest

import (
	"context"
	"github.com/go-chi/chi/v5"
	"log/slog"
	"net/http"

	_ "github.com/Kugeki/kode_test_task/docs" // docs generated by Swag CLI
	"github.com/swaggo/http-swagger/v2"
)

type Server struct {
	s   *http.Server
	log *slog.Logger
}

//	@title						Note Service
//	@version					0.1.0
//	@description				Create notes. Get your notes.
//
//	@securityDefinitions.apikey	BearerAuth
//	@in							header
//	@name						Authorization
//	@tokenUrl					/users/login/
//
//	@BasePath					/

func NewServer(router chi.Router, log *slog.Logger, options ...Opt) (*Server, error) {
	s := &http.Server{Handler: router}

	for _, op := range options {
		err := op(s)
		if err != nil {
			return nil, err
		}
	}

	ConfigureSwagger(router)

	log = log.With(slog.String("context", "rest server"))
	return &Server{s: s, log: log}, nil
}

func (s *Server) Run() error {
	s.log.Info("listening", slog.String("addr", s.s.Addr))
	return s.s.ListenAndServe()
}

func (s *Server) Shutdown(ctx context.Context) error {
	s.log.Info("shutdown is started")
	return s.s.Shutdown(ctx)
}

func ConfigureSwagger(r chi.Router) {
	r.Get("/swagger/*", httpSwagger.Handler(
		httpSwagger.URL("/swagger/doc.json"),
	))

	r.Get("/swagger", func(w http.ResponseWriter, r *http.Request) {
		http.Redirect(w, r, "/swagger/index.html", http.StatusSeeOther)
	})

	r.Get("/", func(w http.ResponseWriter, r *http.Request) {
		http.Redirect(w, r, "/swagger/index.html", http.StatusSeeOther)
	})
}
